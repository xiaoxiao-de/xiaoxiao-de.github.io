{"title":"axios","uid":"33876cf3e210da358d8e4b065eea88e6","slug":"请求拦截器响应拦截器","date":"2022-06-12T13:21:42.000Z","updated":"2022-06-12T13:38:42.465Z","comments":true,"path":"api/articles/请求拦截器响应拦截器.json","keywords":null,"cover":"static\\img\\photo-1516166328576-82e16a127024.jpg","content":"<h2 id=\"请求拦截器响应拦截器\"><a href=\"#请求拦截器响应拦截器\" class=\"headerlink\" title=\"请求拦截器响应拦截器\"></a>请求拦截器响应拦截器</h2><p>axios有两种拦截器分别为请求拦截器和响应拦截器</p>\n<p>请求拦截器:</p>\n<ul>\n<li>在向后台发起请求时进行必要处理操作</li>\n<li>运用场景如,添加统一cookie,请求体加验证,设置请求头</li>\n<li>等同于每个请求都做了相同操作</li>\n</ul>\n<p>响应拦截器:</p>\n<ul>\n<li>请求得到响应后对响应体做一些处理</li>\n<li>运用场景如: 判断登录失效,token过期等,数据统一处理</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; axios创建 \n&#x2F;&#x2F; 下载axios npm i axios\n&#x2F;&#x2F; 引入axios\nimport axios from &#39;axios&#39;\n&#x2F;&#x2F; 创建实例\n const request &#x3D; axios.create(&#123;\n  baseURL: &#39;后台服务器地址&#39;,\n  timeout: 20000 &#x2F;&#x2F; 请求最多多少时间\n&#125;)</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 请求拦截器\naxios.interceptors.request.use(request &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 在发起请求前需要做那些事\n  return request\n&#125;, err &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 请求错误时要做哪些事\n  return Promise.reject(err)\n&#125;)\n&#x2F;&#x2F; 响应拦截器\naxios.interceptors,reponse.use(reponse &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 响应成功时\n  return reponse\n&#125;, err &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 响应失败时\n  return Promise.reject(err).\n&#125;)</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 案例\n&#x2F;&#x2F; 请求拦截器\naxios.interceptors.request.use(req &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 给请求头设置token\n  req.headers.Authorization &#x3D; store.state.token\n  return req\n&#125;, err &#x3D;&gt; &#123;\n  return Promise.reject(err)\n&#125;)\n&#x2F;&#x2F; 响应拦截器\naxios.interceptors.response.use( res &#x3D;&gt; &#123;\n  return res \n&#125;, err &#x3D;&gt; &#123;\n&#x2F;&#x2F; 当token失效时 清空token 并跳转到首页\n  if(err.res.status &#x3D;&#x3D;&#x3D; 401)&#123;\n    store.commit(&#39;token&#39;, &#39;&#39;)\n    router.push(&#39;&#x2F;login&#39;)\n  &#125;\n  return Promise.reject(err)\n&#125;)</code></pre>\n\n","text":"请求拦截器响应拦截器axios有两种拦截器分别为请求拦截器和响应拦截器 请求拦截器: 在向后台发起请求时进行必要处理操作 运用场景如,添加统一cookie,请求体加验证,设置请求头 等同于每个请求都做了相同操作 响应拦截器: 请求得到响应后对响应体做一些处理 运用场景如: 判断登...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":20,"path":"api/categories/技术.json"}],"tags":[{"name":"axios","slug":"axios","count":1,"path":"api/tags/axios.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%8B%A6%E6%88%AA%E5%99%A8%E5%93%8D%E5%BA%94%E6%8B%A6%E6%88%AA%E5%99%A8\"><span class=\"toc-text\">请求拦截器响应拦截器</span></a></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"watch监听器","uid":"6cd9e1bb9bbadb00218cbfbe2f652058","slug":"watch监听器","date":"2022-06-12T13:21:42.000Z","updated":"2022-06-12T13:45:28.472Z","comments":true,"path":"api/articles/watch监听器.json","keywords":null,"cover":"static\\img\\photo-1516166328576-82e16a127024.jpg","text":"watch监听器监听简单数据类型data()&#123; return&#123; name: &#39;张三&#39; &#125; &#125; watch: &#123; name(val)&#123; console.log(val) &#125; &#125; 监听复杂...","link":"","photos":[],"count_time":{"symbolsCount":759,"symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":20,"path":"api/categories/技术.json"}],"tags":[{"name":"ES6","slug":"ES6","count":8,"path":"api/tags/ES6.json"},{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"},{"name":"vue","slug":"vue","count":3,"path":"api/tags/vue.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"React基础","uid":"0cc9f247ec8cd6a003267063f354c1c2","slug":"React基础","date":"2022-06-07T14:24:09.000Z","updated":"2022-06-12T13:45:09.903Z","comments":true,"path":"api/articles/React基础.json","keywords":null,"cover":"static\\img\\photo-1496449903678-68ddcb189a24.jpg","text":"React基础react安装npm install -g create-react-app &#x2F;&#x2F; 全局安装 创建一个项目create-react-app 项目名 不想全局安装可以使用npx方式npx create-react-app 项目名 &#x2F;&#x...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"技术","slug":"技术","count":20,"path":"api/categories/技术.json"}],"tags":[{"name":"React基础","slug":"React基础","count":1,"path":"api/tags/React基础.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}