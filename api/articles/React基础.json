{"title":"React基础","uid":"0cc9f247ec8cd6a003267063f354c1c2","slug":"React基础","date":"2022-06-07T14:24:09.000Z","updated":"2022-06-07T14:19:22.291Z","comments":true,"path":"api/articles/React基础.json","keywords":null,"cover":"static\\img\\photo-1496449903678-68ddcb189a24.jpg","content":"<h2 id=\"React基础\"><a href=\"#React基础\" class=\"headerlink\" title=\"React基础\"></a>React基础</h2><h5 id=\"react安装\"><a href=\"#react安装\" class=\"headerlink\" title=\"react安装\"></a>react安装</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install -g create-react-app &#x2F;&#x2F; 全局安装</code></pre>\n\n<h5 id=\"创建一个项目\"><a href=\"#创建一个项目\" class=\"headerlink\" title=\"创建一个项目\"></a>创建一个项目</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">create-react-app 项目名</code></pre>\n\n<h5 id=\"不想全局安装可以使用npx方式\"><a href=\"#不想全局安装可以使用npx方式\" class=\"headerlink\" title=\"不想全局安装可以使用npx方式\"></a>不想全局安装可以使用npx方式</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">npx create-react-app 项目名\n&#x2F;&#x2F; 需要等待一段时间,在等待时间内实际是安装react库\n&#x2F;&#x2F; react: react顶级库\n&#x2F;&#x2F; react-dom: web的react运行环境 比如app端的react-native\n&#x2F;&#x2F; react-scripts: 包含运行和打包react应用程序的所有脚本配置\n&#x2F;&#x2F; 安装成功后会生成如下的目录结构\n|-- README.md 使用方法的文档\n|-- node_modules 所有依赖安装的目录\n|-- package-lock.json 锁定安装时包的版本号，确保多人开发时依赖能保持一致\n|-- package.json 下载的安装包插件\n|-- public  静态资源公共目录\n|-- src 源代码目录</code></pre>\n\n<h5 id=\"npm安装失败\"><a href=\"#npm安装失败\" class=\"headerlink\" title=\"npm安装失败\"></a>npm安装失败</h5><ul>\n<li>切换npm镜像源</li>\n<li>使用yarn安装</li>\n<li>删除<code>node_modules</code>及package-lock.json重新执行 <code>npm install</code></li>\n<li>清除npm缓存 <code>npm cache clean --force</code> 再执行 <code>npm install</code></li>\n</ul>\n<h5 id=\"react基本结构\"><a href=\"#react基本结构\" class=\"headerlink\" title=\"react基本结构\"></a>react基本结构</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 从react的包当中引入react,只要写react.js组件就必须引入\nimport React from &#39;react&#39;\n&#x2F;&#x2F; react-dom可以把组件渲染到web页面\nimport ReactDOM from &#39;react-dom&#39;\n&#x2F;&#x2F; react-dom中有一个render方法,负责将组件渲染与构造dom树,然后插入到页面元素上\nReactDOM.render(&#39;组件名&#39;,document.getElementById(&#39;挂载的页面id节点&#39;))\n</code></pre>\n\n<h5 id=\"JSX语法\"><a href=\"#JSX语法\" class=\"headerlink\" title=\"JSX语法\"></a>JSX语法</h5><ul>\n<li>JSX将HTMl语法直接加入到JavaScript代码中</li>\n<li>由Babel的JSX编译器实现</li>\n<li>通过编译时会转换为纯JavaScript</li>\n</ul>\n<h5 id=\"JSX原理\"><a href=\"#JSX原理\" class=\"headerlink\" title=\"JSX原理\"></a>JSX原理</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 要明白JSX的原理，需要先明白如何用 JavaScript 对象来表现一个 DOM 元素的结构? \n&#x2F;&#x2F;基本结构\ndiv class&#x3D;&#39;app&#39; id&#x3D;&#39;appRoot&#39;&gt;  \n&lt;h1 class&#x3D;&#39;title&#39;&gt;欢迎进入React的世界&lt;&#x2F;h1&gt; \n&lt;p&gt;    \nReact.js 是一个帮助你构建页面 UI 的库  \n&#x2F;p&gt; \n&lt;&#x2F;div&gt; \n&#x2F;&#x2F; 使用JavaScript对象\n&#123;  tag: &#39;div&#39;,\nattrs: &#123; className: &#39;app&#39;, id: &#39;appRoot&#39;&#125;,  \nchildren: [    \n&#123; tag: &#39;h1&#39;, \nattrs: &#123; className: &#39;title&#39; &#125;,\nchildren: [&#39;欢迎进入React的世界&#39;] &#125;, \n&#123;  \n  tag: &#39;p&#39;, \n  attrs: null, \n  children: [&#39;React.js 是一个构建页面 UI 的库&#39;]    \n  &#125;  \n  ] \n &#125;\n &#x2F;*\nJavaScript 写起来太长了，结构看起来又不清晰，用 HTML 的方式写起来就方便很多了\n React.js 就把 JavaScript 的语法扩展了一下\n 让 JavaScript 语言能够支持这种直接在 JavaScript 代码里面编写类似 HTML 标签结构的语法\n 编译的过程会把类似 HTML 的 JSX 结构转换成 JavaScript 的对象结构\n*&#x2F;\n&#x2F;&#x2F; react编译前代码\nimport React from &#39;react&#39; \nimport ReactDOM from &#39;react-dom&#39;\nclass App extends React.Component &#123; \n  render () &#123;\n    return (\n      &lt;div className&#x3D;&#39;app&#39; id&#x3D;&#39;appRoot&#39;&gt; \n      &lt;h1 className&#x3D;&#39;title&#39;&gt;欢迎进入React的世界&lt;&#x2F;h1&gt;\n      &lt;p&gt;\n      React.js 是一个构建页面 UI 的库\n      &lt;&#x2F;p&gt;\n      &lt;&#x2F;div&gt; \n      ) \n      &#125; \n     &#125;\nReactDOM.render(    &lt;App &#x2F;&gt;,  document.getElementById(&#39;root&#39;) )\n&#x2F;&#x2F; react编译后代码\nimport React from &#39;react&#39; \nimport ReactDOM from &#39;react-dom&#39;\nclass App extends React.Component &#123;  \n  render () &#123;\n    return (\n      React.createElement(\n      &quot;div&quot;,\n      &#123; \n        assName: &#39;app&#39;,\n        id: &#39;appRoot&#39;\n      &#125;,\n      React.createElement(&quot;h1&quot;, \n      &#123; \n      className: &#39;title&#39; \n      &#125;,          \n      &quot;欢迎进入React的世界&quot;        \n      ),        \n      React.createElement(&quot;p&quot;,\n                           null,          \n                           &quot;React.js 是一个构建页面 UI 的库&quot;        \n                           )      \n                         )    \n                       )  \n                     &#125; \n                   &#125;\nReactDOM.render(    React.createElement(App),  document.getElementById(&#39;root&#39;) )\n&#x2F;&#x2F; React.createElement会构建一个 JavaScript 对象来描述你 HTML 结构的信息，包括标签名、属性、 还有子元素等, 语法为\n&#x2F;&#x2F; 编译顺序 JSX —使用react构造组件，bable进行编译—&gt; JavaScript对象 — ReactDOM.render() —&gt;DOM 元素 —&gt;插入页面</code></pre>\n\n<h5 id=\"clas组件\"><a href=\"#clas组件\" class=\"headerlink\" title=\"clas组件\"></a>clas组件</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">import React from &#39;react&#39;\nimport ReactDOM from &#39;react-dom&#39;\nclass App extends React.Component &#123;  \n  render () &#123;    \n    return (          \n      &lt;h1&gt;欢迎进入React的世界&lt;&#x2F;h1&gt;    \n    )  \n  &#125; \n&#125; \nReactDOM.render(  &lt;App  &#x2F;&gt;,  document.getElementById(&#39;root&#39;) )</code></pre>\n\n","feature":true,"text":"React基础react安装npm install -g create-react-app &#x2F;&#x2F; 全局安装 创建一个项目create-react-app 项目名 不想全局安装可以使用npx方式npx create-react-app 项目名 &#x2F;&#x...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"技术","slug":"技术","count":7,"path":"api/categories/技术.json"}],"tags":[{"name":"React基础","slug":"React基础","count":1,"path":"api/tags/React基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#React%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">React基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#react%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">react安装</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">创建一个项目</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E6%83%B3%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8npx%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">不想全局安装可以使用npx方式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#npm%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5\"><span class=\"toc-text\">npm安装失败</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#react%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">react基本结构</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#JSX%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">JSX语法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#JSX%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">JSX原理</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#clas%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">clas组件</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"JavaScript复习","uid":"d713623c6bc5472ce6c8f594cc93dd04","slug":"数组查找 includes indexOf","date":"2022-06-06T13:30:11.000Z","updated":"2022-06-06T14:49:22.642Z","comments":true,"path":"api/articles/数组查找 includes indexOf.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":" &#x2F;&#x2F; 数组查找 includes indexOf &#x2F;&#x2F; ** 幂运算 &#x3D;&#x3D;&#x3D; Math.pow() const school &#x3D; &#123; name: &quot;尚硅谷&quot;, citi...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":7,"path":"api/categories/技术.json"}],"tags":[{"name":"JavaScript复习","slug":"JavaScript复习","count":1,"path":"api/tags/JavaScript复习.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}