{"title":"Minxins","uid":"fa9186e3fcd1aa3f18e4e09eef185770","slug":"Mixins","date":"2022-06-06T13:30:11.000Z","updated":"2022-06-06T14:49:31.239Z","comments":true,"path":"api/articles/Mixins.json","keywords":null,"cover":"static\\img\\photo-1496449903678-68ddcb189a24.jpg","content":"<h3 id=\"Mixins\"><a href=\"#Mixins\" class=\"headerlink\" title=\"Mixins\"></a>Mixins</h3><p>分发Vue组件复用功能</p>\n<p>mixins是一个js对象,它可以包含我们组件中script的任意选项</p>\n<p>类如: <code>data</code>  <code>components</code> <code>methods</code> <code>created</code> <code>computed</code> 等等</p>\n<p>将组件中共用功能以对象的方式传入mixins选项</p>\n<p>当组件使用mixins对象时所有mixins对象的选项都将被混入该组件</p>\n<h5 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h5><p>当存在多个组件中功能很相近时,就可以利用mixins将公共部分提取出来,通过mixins进行封装</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; minxin是一个对象 所以应该以对象的形式来定义minxins可以和vue组件一样定义自身属性\nexport const myMinxins &#x3D; &#123;\n  components:&#123;&#125;,\n  data() &#123;\n      return &#123;\n        \n      &#125;\n  &#125;,\n  create()&#123;&#125;,\n  mounted() &#123;\n     \n  &#125;,\n  computed: &#123;&#125;,\n  methods: &#123;\n  \n  &#125;,\n&#125;</code></pre>\n\n<h5 id=\"mixins的使用\"><a href=\"#mixins的使用\" class=\"headerlink\" title=\"mixins的使用\"></a>mixins的使用</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 在需要使用的组件中引入minxins 在mixins配置中使用\n&#x2F;&#x2F; minxins文件夹下minxins.js\n&lt;script&gt;\nimport &#123; myMinxins &#125; from &#39;@&#x2F;minxins&#x2F;minxins&#39;\nexport default &#123;\n  name: &#39;Home&#39;,\n  mixins: [myMinxins]\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>方法和参数在各组件中不共享，虽然组件调用了mixins并将其属性合并到自身组件中来了，但是其属性只会被当前组件所识别并不会被共享，也就是其他组件无法从当前组件中获取到mixins中的数据和方法。</p>\n<p>值为对象(components、methods 、computed、data)的选项，混入组件时选项会被合并，键冲突时优先组件，组件中的键会覆盖混入对象的</p>\n<p>值为函数(created、mounted)的选项，混入组件时选项会被合并调用，混合对象里的钩子函数在组件里的钩子函数之前调用</p>\n<h5 id=\"与vuex的区别\"><a href=\"#与vuex的区别\" class=\"headerlink\" title=\"与vuex的区别\"></a>与vuex的区别</h5><p><strong>vuex：</strong>状态管理机，里面定义的变量在每个组件中均可以使用和修改，在任一组件中修改此变量的值之后，其他组件中此变量的值也会随之修改。</p>\n<p><strong>Mixins：</strong>可以定义共用的变量，在每个组件中使用，引入组件中之后，各个变量是相互独立的，值的修改在组件中不会相互影响。</p>\n<h5 id=\"与公共组件的区别\"><a href=\"#与公共组件的区别\" class=\"headerlink\" title=\"与公共组件的区别\"></a>与公共组件的区别</h5><p><strong>组件</strong>：在父组件中引入组件，相当于在父组件中给出一片独立的空间供子组件使用，然后根据props来传值，但本质上两者是相对独立的。</p>\n<p><strong>Mixins：</strong>则是在引入组件之后与组件中的对象和方法进行合并，相当于扩展了父组件的对象与方法，可以理解为形成了一个新的组件。</p>\n","text":"Mixins分发Vue组件复用功能 mixins是一个js对象,它可以包含我们组件中script的任意选项 类如: data components methods created computed 等等 将组件中共用功能以对象的方式传入mixins选项 当组件使用mixins对象...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":17,"path":"api/categories/技术.json"}],"tags":[{"name":"Vue","slug":"Vue","count":3,"path":"api/tags/Vue.json"},{"name":"JavaScirpt","slug":"JavaScirpt","count":1,"path":"api/tags/JavaScirpt.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mixins\"><span class=\"toc-text\">Mixins</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">使用场景</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#mixins%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">mixins的使用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%8Evuex%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">与vuex的区别</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E5%85%AC%E5%85%B1%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">与公共组件的区别</span></a></li></ol></li></ol></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"React基础","uid":"0cc9f247ec8cd6a003267063f354c1c2","slug":"React基础","date":"2022-06-07T14:24:09.000Z","updated":"2022-06-12T13:45:09.903Z","comments":true,"path":"api/articles/React基础.json","keywords":null,"cover":"static\\img\\photo-1496449903678-68ddcb189a24.jpg","text":"React基础react安装npm install -g create-react-app &#x2F;&#x2F; 全局安装 创建一个项目create-react-app 项目名 不想全局安装可以使用npx方式npx create-react-app 项目名 &#x2F;&#x...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"技术","slug":"技术","count":17,"path":"api/categories/技术.json"}],"tags":[{"name":"React基础","slug":"React基础","count":1,"path":"api/tags/React基础.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"JavaScript复习","uid":"d713623c6bc5472ce6c8f594cc93dd04","slug":"数组查找 includes indexOf","date":"2022-06-06T13:30:11.000Z","updated":"2022-06-06T14:49:22.642Z","comments":true,"path":"api/articles/数组查找 includes indexOf.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":" &#x2F;&#x2F; 数组查找 includes indexOf &#x2F;&#x2F; ** 幂运算 &#x3D;&#x3D;&#x3D; Math.pow() const school &#x3D; &#123; name: &quot;尚硅谷&quot;, citi...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":17,"path":"api/categories/技术.json"}],"tags":[{"name":"JavaScript复习","slug":"JavaScript复习","count":1,"path":"api/tags/JavaScript复习.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}