{"title":"git总结","uid":"17187898c0b5119ee835799c3aeb156a","slug":"git总结","date":"2022-05-15T12:46:25.000Z","updated":"2022-10-31T08:46:20.314Z","comments":true,"path":"api/articles/git总结.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","content":"<h2 id=\"git总结\"><a href=\"#git总结\" class=\"headerlink\" title=\"git总结\"></a>git总结</h2><h5 id=\"git是什么工具，起到了什么作用\"><a href=\"#git是什么工具，起到了什么作用\" class=\"headerlink\" title=\"git是什么工具，起到了什么作用?\"></a>git是什么工具，起到了什么作用?</h5><p> 版本控制工具, 代码管理, 版本控制</p>\n<h5 id=\"将本地代码以文件提交到远程厂库\"><a href=\"#将本地代码以文件提交到远程厂库\" class=\"headerlink\" title=\"将本地代码以文件提交到远程厂库\"></a>将本地代码以文件提交到远程厂库</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">全局设置： git config --global user.name  &quot;lqs&quot;  git config --global user.email &quot;邮箱&quot;\n远程仓库与本地计算机连接：设置ssh公钥 \n生成公钥:  ssh-keygen -t -rsa -C &quot;邮箱&quot;\n查看公钥: cat ~&#x2F;.ssh&#x2F;id_rsa.pub\n将ssh公钥添加\n连接完成\n查看文件: ls\n提交本地仓库到远程仓库: git push</code></pre>\n\n<h5 id=\"git基本操作\"><a href=\"#git基本操作\" class=\"headerlink\" title=\"git基本操作\"></a>git基本操作</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">初始化仓库: git init\n查看配置: git config -l\n查看状态: git status -s\n将文件提交到暂存区: git add .\n将文件提交到本地仓库: git commit -m &quot;提示&quot;\n查看所有文件: git diff\n查看修改历史: git reflog\n回到上一个版本: git reset --hard HEAD^\n回到指定版本: git reset --hard 版本号\n当远程仓库有人更新代码时,先拉取代码,然后push: git pull ---- git push\ngit clone &lt;仓库地址&gt;\n拷贝一个git仓库到本地\ngit branch || git branch -r\n用于查看本地仓库分支和远程仓库分支\ngit branch &lt;分支名&gt;\n新建分支\ngit remote add [shortname] [url]\n添加远程版本库\ngit fetch\n用于从远程获取代码库\ngit checkout &lt;本地分支名&gt;\n切换本地分支\ngit pull &lt;本地分支名&gt;\n用于从远程获取代码并合并本地的版本\ngit add .\n添加当前目录下的所有文件到暂存区\ngit commit -m [message]\n将暂存区内容添加到本地仓库\ngit push --set-upstream origin &lt;分支名称&gt;\n本地分支提交到远程仓库\ngit branch -d &lt;分支名&gt;\n删除本地分支\ngit push origin --delete &lt;分支名称&gt;\n删除远程分支\ngit push &lt;本地分支名&gt;丨&lt;远程分支名&gt;\n用于从将本地的分支版本上传到远程并合并\ngit merge &lt;分支名称&gt;\n合并分支 最好配合git fetch使用</code></pre>\n\n<h5 id=\"gitflow工作流\"><a href=\"#gitflow工作流\" class=\"headerlink\" title=\"gitflow工作流\"></a>gitflow工作流</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">一般中大型项目使用gitflow 大多分为以下几个分支:\nmaster 用于保存上线版本的代码\ndevelop 用于保存相对稳定版本的代码\nfeature 用于开发某几个功能,不同的功能可能会创建不同的分支,所有feature都是dev分支创建\nrelease 用于代码上线前的准备(测试,bug修复)\nbugfix 用于修复不紧急bug\nhotfix 用于修复紧急bug\n\n管理者会创建一个仓库为master分支,通过拉取代码创建dev分支上传远程仓库\n当有功能需求时创建feature,并安需求创建功能分支分配\n当功能写完时相关人员创建测试分支release,进行测试\n将bug分为bugfix和hotfix两个分支</code></pre>\n\n<p>![](C:\\Users\\Administrator\\Pictures\\Camera Roll\\微信图片_20221031164452.png)</p>\n","text":"git总结git是什么工具，起到了什么作用? 版本控制工具, 代码管理, 版本控制 将本地代码以文件提交到远程厂库全局设置： git config --global user.name &quot;lqs&quot; git config --global user.email ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":21,"path":"api/categories/技术.json"}],"tags":[{"name":"GIT","slug":"GIT","count":2,"path":"api/tags/GIT.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#git%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">git总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#git%E6%98%AF%E4%BB%80%E4%B9%88%E5%B7%A5%E5%85%B7%EF%BC%8C%E8%B5%B7%E5%88%B0%E4%BA%86%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">git是什么工具，起到了什么作用?</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%BB%A5%E6%96%87%E4%BB%B6%E6%8F%90%E4%BA%A4%E5%88%B0%E8%BF%9C%E7%A8%8B%E5%8E%82%E5%BA%93\"><span class=\"toc-text\">将本地代码以文件提交到远程厂库</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">git基本操作</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#gitflow%E5%B7%A5%E4%BD%9C%E6%B5%81\"><span class=\"toc-text\">gitflow工作流</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"git命令","uid":"e5c9682f958fbae18070afcafeff3ba8","slug":"git基础","date":"2022-05-15T12:46:25.000Z","updated":"2022-06-04T10:58:26.131Z","comments":true,"path":"api/articles/git基础.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"安装完git之后第一件是就是设置自己的用户名和邮箱地址git config --global user.name “用户名&quot; git config --global user.email &quot;邮箱&quot; 如果是使用了–global选项,那么命令只需要运行一...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"技术","slug":"技术","count":21,"path":"api/categories/技术.json"}],"tags":[{"name":"GIT","slug":"GIT","count":2,"path":"api/tags/GIT.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vue状态管理","uid":"32bd86f22c17318130c6bcbe5d782d40","slug":"Vue状态管理","date":"2022-05-13T12:46:25.000Z","updated":"2022-10-31T15:08:32.253Z","comments":true,"path":"api/articles/Vue状态管理.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"Vue状态管理vuex是专门在 Vue 中实现集中式状态管理的一个 Vue 插件,对 vue 应用中多个组件的共享状态进行集中式的管理,也是一种组件间通信的方式，且适用于任意组件间通信。 pinia是vuex的替代者,是一个全新的状态管理工具,它支持ts,体积很小,轻量级,适用于...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"技术","slug":"技术","count":21,"path":"api/categories/技术.json"}],"tags":[{"name":"Vue","slug":"Vue","count":4,"path":"api/tags/Vue.json"},{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}