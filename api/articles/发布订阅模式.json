{"title":"发布订阅模式","uid":"e9ee661d319ac0e21c172e3d1f135c82","slug":"发布订阅模式","date":"2022-06-13T14:29:12.000Z","updated":"2022-06-13T14:35:49.282Z","comments":true,"path":"api/articles/发布订阅模式.json","keywords":null,"cover":"static\\img\\photo-1591693117893-7cbfc0a7ac69.jpg","content":"<h2 id=\"发布订阅模式\"><a href=\"#发布订阅模式\" class=\"headerlink\" title=\"发布订阅模式\"></a>发布订阅模式</h2><p>什么是发布消息订阅模式?</p>\n<p>基于一个事件通道</p>\n<p>希望接收通知的对象A通过自定义事件订阅主题</p>\n<p>被激活事件的对象B通过发布主题事件的方式通知各个订阅该主题的A对象</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">class Observer &#123;\n   constructor()&#123;\n     &#x2F;&#x2F; 事件中心\n     &#x2F;&#x2F; 存储方式为： &#123;a: [], b: []&#125;\n     &#x2F;&#x2F; 每个任务下存放其订阅者事件\n     this.message &#x3D; &#123;&#125;\n   &#125;\n   &#x2F;&#x2F;订阅方法\n   $on(type, fn)&#123;\n     &#x2F;&#x2F; 如果没有订阅消息就初始化一个数组\n     if(!this.message[type])&#123;\n       this.message[type] &#x3D; []\n     &#125;\n     &#x2F;&#x2F; 有订阅消息就push到订阅者事件数组里\n     this.message[type].push(fn)\n   &#125;\n   &#x2F;&#x2F; 取消订阅\n   $off(type, fn)&#123;\n     &#x2F;&#x2F; 判断你有没有订阅\n     if(!this.message[type]) return \n     &#x2F;&#x2F; 判断有没有在订阅者事件队列中没有就删除队列\n     if(!fn)&#123;\n       this.message[type] &#x3D; undefined\n     &#125;\n     &#x2F;&#x2F; 如果存在订阅者事件就过滤掉它\n     this.message[type] &#x3D; this.message[type].filter(item &#x3D;&gt; item !&#x3D;&#x3D; fn)\n   &#125;\n   &#x2F;&#x2F; 发送消息\n   $emit(type)&#123;\n     if(!this.message[type]) return &#39;没有找到该消息&#39;\n     this.message[type].forEach(item &#x3D;&gt; item() )\n   &#125;\n &#125;\n &#x2F;&#x2F; 发布者\n const person1 &#x3D; new Observer()\n &#x2F;&#x2F; 订阅一下内容\n  person1.$on(&#39;abc&#39;, handleClickA)\n  person1.$on(&#39;quit&#39;,handleClickB)\n  person1.$on(&#39;uuid&#39;,handleClickC)\n  person1.$off(&#39;abc&#39;,handleClickA)\n  person1.$emit(&#39;abc&#39;)\n  person1.$emit(&#39;quit&#39;)\n  person1.$emit(&#39;uuid&#39;)\n  function handleClickA()&#123;\n    console.log(1111)\n  &#125;\n  function handleClickB()&#123;\n    console.log(2222)\n  &#125;\n  function handleClickC()&#123;\n    console.log(3333)\n  &#125;</code></pre>\n\n","text":"发布订阅模式什么是发布消息订阅模式? 基于一个事件通道 希望接收通知的对象A通过自定义事件订阅主题 被激活事件的对象B通过发布主题事件的方式通知各个订阅该主题的A对象 class Observer &#123; constructor()&#123; &#x2F;&#x2F; 事...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":14,"path":"api/categories/技术.json"}],"tags":[{"name":"ES6","slug":"ES6","count":6,"path":"api/tags/ES6.json"},{"name":"JavaScript","slug":"JavaScript","count":8,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">发布订阅模式</span></a></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ReactHooks","uid":"316ea3df3f075543c59a5d1fe255bb06","slug":"ReactHooks","date":"2022-06-13T14:29:12.000Z","updated":"2022-06-13T14:30:19.309Z","comments":true,"path":"api/articles/ReactHooks.json","keywords":null,"cover":"static\\img\\photo-1591693117893-7cbfc0a7ac69.jpg","text":"ReactHookshooks优点: 高阶组件为了复用，导致代码层级复杂 生命周期的复杂 写成functional组件,无状态组件 ，因为需要状态，又改成了class,成本高 不存在生命周期，所以不要把 Class Component 的生命周期概念搬过来试图对号入座 &#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"技术","slug":"技术","count":14,"path":"api/categories/技术.json"}],"tags":[{"name":"ES6","slug":"ES6","count":6,"path":"api/tags/ES6.json"},{"name":"JavaScript","slug":"JavaScript","count":8,"path":"api/tags/JavaScript.json"},{"name":"React","slug":"React","count":1,"path":"api/tags/React.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"小程序","uid":"cc519f18fc7027e7d44b9a0621d59e8e","slug":"小程序分享朋友圈功能","date":"2022-06-12T13:44:15.000Z","updated":"2022-06-12T13:44:51.721Z","comments":true,"path":"api/articles/小程序分享朋友圈功能.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"小程序分享朋友圈功能小程序页面默认不可被分享到朋友圈，开发者需主动设置“分享到朋友圈”。页面允许被分享到朋友圈，需满足两个条件： 首先，页面需设置允许“发送给朋友”。具体参考 Page.onShareAppMessage 接口文档 满足条件 1 后，页面需设置允许“分享到朋友圈”...","link":"","photos":[],"count_time":{"symbolsCount":783,"symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":14,"path":"api/categories/技术.json"}],"tags":[{"name":"小程序","slug":"小程序","count":1,"path":"api/tags/小程序.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}