{"title":"ui库input文本框","uid":"af1ec4b22e6834df21b119ba73ac155f","slug":"自定义封装input文本框","date":"2022-06-27T03:48:12.000Z","updated":"2022-06-27T15:53:07.819Z","comments":true,"path":"api/articles/自定义封装input文本框.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","content":"<h2 id=\"自定义封装input文本框\"><a href=\"#自定义封装input文本框\" class=\"headerlink\" title=\"自定义封装input文本框\"></a>自定义封装input文本框</h2><p>参数</p>\n<table>\n<thead>\n<tr>\n<th>参数名称</th>\n<th>参数描述</th>\n<th>参数类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>placeholder</td>\n<td>占位符</td>\n<td>string</td>\n<td>无</td>\n</tr>\n<tr>\n<td>type</td>\n<td>文本框类型(text&#x2F;password)</td>\n<td>string</td>\n<td>text</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>禁用</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>clearable</td>\n<td>是否显示清空按钮</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>show-password</td>\n<td>是否显示密码切换</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>name</td>\n<td>name属性</td>\n<td>string</td>\n<td>无</td>\n</tr>\n</tbody></table>\n<p>事件</p>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>事件描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>blur</td>\n<td>失去焦点事件</td>\n</tr>\n<tr>\n<td>change</td>\n<td>内容改变事件</td>\n</tr>\n<tr>\n<td>focus</td>\n<td>获取焦点事件</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;qi-input&quot;\n  :class&#x3D;&quot;&#123;&#39;qi-input_suffix&#39;: showSuffix&#125;&quot;&gt;\n  &lt;!-- 判断showPassword是否为真 --&gt;\n  &lt;!-- 为真通过passWordVisible去判断type类型来控制隐藏 --&gt;\n    &lt;input\n    :type&#x3D;&quot;showPassword ? (passWordVisible ? &#39;text&#39; : &#39;password&#39;) : type&quot;\n    class&#x3D;&quot;qi-input_inner&quot;\n    :class&#x3D;&quot;[&#123;&#39;is-disabled&#39;: disabled&#125;]&quot;\n    :placeholder&#x3D;&#39;placeholder&#39;\n    :name&#x3D;&quot;name&quot;\n    :disabled&#x3D;&quot;disabled&quot;\n    :value&#x3D;&quot;value&quot;\n    @input&#x3D;&quot;handlerInput&quot;\n     &#x2F;&gt;\n      &lt;span class&#x3D;&quot;qi-input_suffix&quot; v-if&#x3D;&quot;showSuffix&quot;&gt;\n        &lt;!--触发input回调当点击时清空targrt值当没值是不显示文本  --&gt;\n   &lt;i class&#x3D;&quot;qi-input_icon qi-icon-cancel&quot; \n   v-if&#x3D;&quot;clearable &amp;&amp; value&quot;\n   @click&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;i&gt;\n   &lt;i class&#x3D;&quot;qi-input_icon qi-icon-visible&quot;\n   v-if&#x3D;&quot;showPassword&quot;\n   :class&#x3D;&quot;&#123;&#39;qi-icon-view-active&#39;: passWordVisible&#125;&quot;\n   @click&#x3D;&quot;handleShow&quot;&gt;&lt;&#x2F;i&gt;\n &lt;&#x2F;span&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;QiInput&#39;,\n  data () &#123;\n    return &#123;\n      passWordVisible: false\n    &#125;\n  &#125;,\n  props: &#123;\n    &#x2F;&#x2F; 输入框提示\n    placeholder: &#123;\n      type: String,\n      default: &#39;&#39;\n    &#125;,\n    &#x2F;&#x2F; 输入框类型\n    type: &#123;\n      type: String,\n      default: &#39;text&#39;\n    &#125;,\n    &#x2F;&#x2F; 输入框name\n    name: &#123;\n      type: String,\n      default: &#39;&#39;\n    &#125;,\n    &#x2F;&#x2F; 是否禁用\n    disabled: &#123;\n      type: Boolean,\n      default: false\n    &#125;,\n    &#x2F;&#x2F; 输入框值\n    value: &#123;\n      type: String,\n      default: &#39;&#39;\n    &#125;,\n    &#x2F;&#x2F; 清空\n    clearable: &#123;\n      type: Boolean,\n      default: false\n    &#125;,\n    &#x2F;&#x2F; 显示密码\n    showPassword: &#123;\n      type: Boolean,\n      default: false\n    &#125;\n  &#125;,\n  computed: &#123;\n    showSuffix () &#123;\n      return this.clearable || this.showPassword\n    &#125;\n  &#125;,\n  methods: &#123;\n    handlerInput (&#123; target &#125;) &#123;\n         &#x2F;*\n     当给一个innput标签进行双向绑定要给父元素传值时\n     需要获得value值 在使用input事件监听标签内数据\n     在组件内使用v-model显然时不合适的\n     我们可以通过v-mode特性进行操作\n     由于v-model绑定的是value值\n     且自动绑定了input事件\n     可以通过发射input事件传输入当前target值进行双向绑定\n    *&#x2F;\n      this.$emit(&#39;input&#39;, target.value)\n    &#125;,\n    clear () &#123;\n      this.$emit(&#39;input&#39;, &#39;&#39;)\n    &#125;,\n    handleShow () &#123;\n      this.passWordVisible &#x3D; !this.passWordVisible\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;\n&lt;style lang&#x3D;&#39;scss&#39; scoped&gt;\n.qi-input&#123;\n    width: 100%;\n    position: relative;\n    font-size: 14px;\n    display: inline-block;\n    .qi-input_inner&#123;\n      -webkit-appearance: none;\n      background-color: #fff;\n      background-image: none;\n      border: 1px solid #dcdfe6;\n      border-radius: 4px;\n      box-sizing: border-box;\n      color: #606266;\n      display: inline-block;\n      font-size: inherit;\n      height: 40px;\n      line-height: 40px;\n      outline: none;\n      padding: 0 15px;\n      transition: border-color .2s cubic-bezier(.645,045,.355,1);\n      width: 100%;\n      &amp;:focus&#123;\n        outline: none;\n        border-color: #409eff;\n      &#125;\n      &#x2F;&#x2F; input禁用样式\n      &amp;.is-disabled&#123;\n        background-color: #f5f7fa;\n        border-color: #e4e7ed;\n        color: #c0c4cc;\n        cursor:not-allowed;\n      &#125;\n    &#125;\n  &#125;\n  .qi-input_suffix&#123;\n    .qi-input_inner&#123;\n      padding-right: 30px;\n    &#125;\n    .qi-input_suffix&#123;\n      position: absolute;\n      right: 10px;\n      height: 100%;\n      top: 0;\n      line-height: 40px;\n      text-align: center;\n      color: #c0c4cc;\n      transition: all .3s;\n      z-index: 900;\n      i&#123;\n        color: #c0c4cc;\n        font-size: 14px;\n        cursor: pointer;\n        transition: color .2s cubic-bezier(.645,.045,.355,1);\n      &#125;\n      .qi-icon-view-active &#123;\n        color: #409eff;\n      &#125;\n    &#125;\n  &#125;\n&lt;&#x2F;style&gt;\n</code></pre>\n\n","feature":true,"text":"自定义封装input文本框参数 参数名称 参数描述 参数类型 默认值 placeholder 占位符 string 无 type 文本框类型(text&#x2F;password) string text disabled 禁用 boolean false clearable 是...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"ui库","slug":"ui库","count":5,"path":"api/categories/ui库.json"}],"tags":[{"name":"ui库","slug":"ui库","count":5,"path":"api/tags/ui库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B0%81%E8%A3%85input%E6%96%87%E6%9C%AC%E6%A1%86\"><span class=\"toc-text\">自定义封装input文本框</span></a></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"git日常使用","date":"2022-06-29T14:04:47.959Z","updated":"2022-06-29T15:18:05.603Z","comments":true,"path":"api/articles/git日常使用.json","keywords":null,"cover":null,"text":"git日常使用 git是一个开源的分布式版本控制系统 git有3个工作区 workspace工作区 staging area 暂存区 local repository 本地仓库 remote repository 远程仓库git基本操作git clone &lt;仓库地址&gt;...","link":"","photos":[],"count_time":{"symbolsCount":514,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"ui库input文本框","uid":"af1ec4b22e6834df21b119ba73ac155f","slug":"自定义封装dialog对话框","date":"2022-06-27T03:48:12.000Z","updated":"2022-06-27T15:53:11.599Z","comments":true,"path":"api/articles/自定义封装dialog对话框.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"自定义封装input文本框前置知识 vue过渡动画 sync修饰符 具名插槽与v-slot指令 参数 参数名 参数描述 参数类型 默认值 title 对话框标题 string 提示 width 宽度 string 50% top 与顶部距离 string 200px visibl...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"ui库","slug":"ui库","count":5,"path":"api/categories/ui库.json"}],"tags":[{"name":"ui库","slug":"ui库","count":5,"path":"api/tags/ui库.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}