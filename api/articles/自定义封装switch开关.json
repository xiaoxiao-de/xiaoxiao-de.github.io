{"title":"ui库switch开关","uid":"0e15c5d790782cba4ebaaf850d67592f","slug":"自定义封装switch开关","date":"2022-06-27T03:48:12.000Z","updated":"2022-06-27T15:52:42.657Z","comments":true,"path":"api/articles/自定义封装switch开关.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","content":"<h2 id=\"自定义封装switch开关\"><a href=\"#自定义封装switch开关\" class=\"headerlink\" title=\"自定义封装switch开关\"></a>自定义封装switch开关</h2><table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>参数描述</th>\n<th>参数类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>v-model</td>\n<td>双向绑定</td>\n<td>Boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>name</td>\n<td>name属性</td>\n<td>String</td>\n<td>text</td>\n</tr>\n<tr>\n<td>activeColor</td>\n<td>自定义的激活颜色</td>\n<td>String</td>\n<td>#1ec63b</td>\n</tr>\n<tr>\n<td>inactiveColor</td>\n<td>自定义不激活颜色</td>\n<td>String</td>\n<td>#dd001b</td>\n</tr>\n</tbody></table>\n<p>事件</p>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>事件描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>change</td>\n<td>change时触发的事件</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;template&gt;\n&lt;!-- 点击时触发滑块滑动改变样式 --&gt;\n   &lt;div class&#x3D;&quot;qi-switch&quot; \n   :class&#x3D;&quot;&#123;&#39;is-checked&#39;: value&#125;&quot; \n   @click&#x3D;&quot;handleClick&quot;&gt;\n   &#x2F;&#x2F;&#x2F;因为switch是表单组件 有可能会用到name这边使用复选框\n     &lt;input class&#x3D;&quot;qi-switch_input&quot;\n     type&#x3D;&quot;checkbox&quot;\n     :name&#x3D;&#39;name&#39;\n     ref&#x3D;&#39;input&#39;&#x2F;&gt;\n    &lt;span class&#x3D;&quot;qi-switch_core&quot; ref&#x3D;&quot;core&quot;&gt;\n      &lt;span class&#x3D;&quot;qi-switch_button&quot;&gt;&lt;&#x2F;span&gt;\n    &lt;&#x2F;span&gt;\n   &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;QiSwitch&#39;,\n  props: &#123;\n    &#x2F;&#x2F; value值\n    value: &#123;\n      type: Boolean,\n      default: false\n    &#125;,\n    &#x2F;&#x2F; 自定义颜色按下\n    activeColor: &#123;\n      type: String,\n      default: &#39;&#39;\n    &#125;,\n    &#x2F;&#x2F; 自定义颜色松开\n    inactiveColor: &#123;\n      type: String,\n      default: &#39;&#39;\n    &#125;,\n    &#x2F;&#x2F; name属性\n    name: &#123;\n      type: String,\n      default: &#39;&#39;\n    &#125;\n  &#125;,\n  &#x2F;&#x2F; watch: &#123;\n  &#x2F;&#x2F;   &#39;value&#39; (newValue) &#123;\n  &#x2F;&#x2F;     &#x2F;&#x2F; 修改开关颜色\n  &#x2F;&#x2F;     if (this.activeColor || this.inactiveColor) &#123;\n  &#x2F;&#x2F;       const color &#x3D; this.value ? this.activeColor : this.inactiveColor\n  &#x2F;&#x2F;       this.$refs.core.style.borderColor &#x3D; color\n  &#x2F;&#x2F;       this.$refs.core.style.backgroundColor &#x3D; color\n  &#x2F;&#x2F;     &#125;\n  &#x2F;&#x2F;   &#125;\n  &#x2F;&#x2F; &#125;,\n  mounted () &#123;\n    this.setColor()\n    this.$refs.input.checked &#x3D; this.value\n  &#125;,\n  methods: &#123;\n    async handleClick () &#123;\n      &#x2F;&#x2F; 通过父组件绑定v-model获取value属性和input\n      &#x2F;&#x2F; 发射事件传给父元素改变值\n      this.$emit(&#39;input&#39;, !this.value)\n      await this.$nextTick()\n      this.$refs.input.checked &#x3D; this.value\n      this.setColor()\n    &#125;,\n    setColor () &#123;\n      if (this.activeColor || this.inactiveColor) &#123;\n        const color &#x3D; this.value ? this.activeColor : this.inactiveColor\n        this.$refs.core.style.borderColor &#x3D; color\n        this.$refs.core.style.backgroundColor &#x3D; color\n      &#125;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&#39;scss&#39; scoped&gt;\n.qi-switch&#123;\n    display: inline-block;\n    align-items: center;\n    position: relative;\n    font-size: 14px;\n    line-height: 20px;\n    vertical-align: middle;\n  .qi-switch_core&#123;\n    margin: 0;\n    display: inline-block;\n    position: relative;\n    width: 40px;\n    height: 20px;\n    border: 1px solid #dcdfe6;\n    outline: none;\n    border-radius: 10px;\n    box-sizing: border-box;\n    background: #dcdfe6;\n    cursor: pointer;\n    transition: border-color .3s,background-color .3s;\n    vertical-align: middle;\n    .qi-switch_button&#123;\n      position:absolute;\n      top: 1px;\n      left: 1px;\n      border-radius: 100%;\n      transition: all .3s;\n      width: 16px;\n      height: 16px;\n      background-color: #fff;\n      &#125;\n    &#125;\n  &#125;\n  &#x2F;&#x2F; 滑动样式\n  .is-checked &#123;\n    .qi-switch_core&#123;\n      border-color: #409eff;\n      background-color: #409eff;\n      .qi-switch_button &#123;\n        transform: translateX(20px);\n      &#125;\n    &#125;\n  &#125;\n  &#x2F;&#x2F; 隐藏input\n  .qi-switch_input&#123;\n    position:absolute;\n    width: 0;\n    height: 0;\n    opacity: 0;\n    margin: 0;\n  &#125;\n&lt;&#x2F;style&gt;\n</code></pre>\n\n","text":"自定义封装switch开关 参数名 参数描述 参数类型 默认值 v-model 双向绑定 Boolean false name name属性 String text activeColor 自定义的激活颜色 String #1ec63b inactiveColor 自定义不激活颜...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"ui库","slug":"ui库","count":5,"path":"api/categories/ui库.json"}],"tags":[{"name":"ui库","slug":"ui库","count":5,"path":"api/tags/ui库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B0%81%E8%A3%85switch%E5%BC%80%E5%85%B3\"><span class=\"toc-text\">自定义封装switch开关</span></a></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ui库radio与radio-group组件","uid":"315d13c18c53836143d04f0454f73ada","slug":"自定义封装radio组件","date":"2022-06-27T03:48:12.000Z","updated":"2022-06-27T15:53:03.083Z","comments":true,"path":"api/articles/自定义封装radio组件.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"自定义封装radio与radio-group组件参数 参数名称 参数描述 参数类型 默认值 v-model 双向绑定 boolean fasle label 单选框和value string，number，Boolean 无 name name string 无 &lt;temp...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"ui库","slug":"ui库","count":5,"path":"api/categories/ui库.json"}],"tags":[{"name":"ui库","slug":"ui库","count":5,"path":"api/tags/ui库.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ui库ui-button按钮","uid":"32a3ee3e88f21c8f7c84d017e1289b77","slug":"自定义封装ui-button按钮","date":"2022-06-27T03:48:12.000Z","updated":"2022-06-27T15:52:53.179Z","comments":true,"path":"api/articles/自定义封装ui-button按钮.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"自定义封装ui-button按钮知识点 组件通信 组件插槽 props校验 参数 参数名 参数描述 参数类型 默认值 type 按钮类型(info,success,primary,waring,danger) strign default plain 是否朴素按钮 boolean...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"ui库","slug":"ui库","count":5,"path":"api/categories/ui库.json"}],"tags":[{"name":"ui库","slug":"ui库","count":5,"path":"api/tags/ui库.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}