{"title":"Vue自定义指令","uid":"8c91c7fcf700c42b838e9d1e512a6e9a","slug":"Vue自定义指令","date":"2022-06-12T13:21:42.000Z","updated":"2022-06-12T13:46:00.948Z","comments":true,"path":"api/articles/Vue自定义指令.json","keywords":null,"cover":"static\\img\\photo-1516166328576-82e16a127024.jpg","content":"<h3 id=\"Vue自定义指令\"><a href=\"#Vue自定义指令\" class=\"headerlink\" title=\"Vue自定义指令\"></a>Vue自定义指令</h3><p>Vue自定义指令有全局注册和局部注册两种方式</p>\n<p>全局注册通过Vue.directive(id,[definition])</p>\n<p>局部注册通过directives注册指令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 全局注册\n&#x2F;&#x2F; src&#x2F;main.js\nimport Vue from &quot;vue&quot;;\nimport App from &quot;.&#x2F;App.vue&quot;;\n\nVue.config.productionTip &#x3D; false;\nVue.directive(&quot;resize&quot;, &#123;\n  bind() &#123;&#125;,\n  inserted() &#123;&#125;,\n  update() &#123;&#125;,\n  componentUpdated() &#123;&#125;,\n  unbind() &#123;&#125;,\n&#125;);\nnew Vue(&#123;\n  render: (h) &#x3D;&gt; h(App),\n&#125;).$mount(&quot;#app&quot;);\n&#x2F;&#x2F;局部注册\n&lt;script&gt;\nexport default &#123;\n  name: &quot;App&quot;,\n  components: &#123;&#125;,\n  directives: &#123;\n    resize: &#123;\n      bind() &#123;&#125;,\n      inserted() &#123;&#125;,\n      update() &#123;&#125;,\n      componentUpdated() &#123;&#125;,\n      unbind() &#123;&#125;,\n    &#125;,\n  &#125;,\n&#125;;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h5 id=\"钩子函数\"><a href=\"#钩子函数\" class=\"headerlink\" title=\"钩子函数\"></a>钩子函数</h5><p><strong>bind</strong>:只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置</p>\n<p><strong>inserted</strong>:被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p>\n<p><strong>update</strong>:所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新</p>\n<p><strong>componentUpdated</strong>:指令所在组件的 VNode及其子 VNode全部更新后调用。</p>\n<p><strong>unbind</strong>:只调用一次，指令与元素解绑时调用。</p>\n<p>简单理解钩子函数顺序：指令绑定到元素时（bind）、元素插入时（inserted）、组件更新时（update）、组件更新后（componentUpdated）、指令与元素解绑时（unbind）</p>\n<h5 id=\"钩子函数参数\"><a href=\"#钩子函数参数\" class=\"headerlink\" title=\"钩子函数参数\"></a>钩子函数参数</h5><p><strong>el</strong>:指令所绑定的元素，可以用来直接操作 DOM。</p>\n<p><strong>binding</strong>:一个对象，包含以下属性</p>\n<ul>\n<li><code>name</code>：指令名，不包括 <code>v-</code> 前缀。</li>\n<li><code>value</code>：指令的绑定值，例如：<code>v-my-directive=&quot;1 + 1&quot;</code> 中，绑定值为 <code>2</code>。</li>\n<li><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。无论值是否改变都可用。</li>\n<li><code>expression</code>：字符串形式的指令表达式。例如 <code>v-my-directive=&quot;1 + 1&quot;</code> 中，表达式为 <code>&quot;1 + 1&quot;</code>。</li>\n<li><code>arg</code>：传给指令的参数，可选。例如 <code>v-my-directive:foo</code> 中，参数为 <code>&quot;foo&quot;</code>。</li>\n<li>modifiers<code>：一个包含修饰符的对象。例如：</code>v-my-directive.foo.bar<code>中，修饰符对象为</code>{ foo: true, bar: true }</li>\n</ul>\n<p><strong>vnode</strong>:Vue 编译生成的虚拟节点。</p>\n<p><strong>oldVnode</strong>:上一个虚拟节点，仅在<code>update</code>和<code>componentUpdated</code>钩子中可用。</p>\n","text":"Vue自定义指令Vue自定义指令有全局注册和局部注册两种方式 全局注册通过Vue.directive(id,[definition]) 局部注册通过directives注册指令 &#x2F;&#x2F; 全局注册 &#x2F;&#x2F; src&#x2F;main.js imp...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"技术","slug":"技术","count":14,"path":"api/categories/技术.json"}],"tags":[{"name":"ES6","slug":"ES6","count":6,"path":"api/tags/ES6.json"},{"name":"JavaScript","slug":"JavaScript","count":8,"path":"api/tags/JavaScript.json"},{"name":"vue","slug":"vue","count":3,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">Vue自定义指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">钩子函数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">钩子函数参数</span></a></li></ol></li></ol></li></ol>","author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"小程序","uid":"cc519f18fc7027e7d44b9a0621d59e8e","slug":"小程序分享朋友圈功能","date":"2022-06-12T13:44:15.000Z","updated":"2022-06-12T13:44:51.721Z","comments":true,"path":"api/articles/小程序分享朋友圈功能.json","keywords":null,"cover":"static\\img\\photo-1571361656693-d7602246ce3c.jpg","text":"小程序分享朋友圈功能小程序页面默认不可被分享到朋友圈，开发者需主动设置“分享到朋友圈”。页面允许被分享到朋友圈，需满足两个条件： 首先，页面需设置允许“发送给朋友”。具体参考 Page.onShareAppMessage 接口文档 满足条件 1 后，页面需设置允许“分享到朋友圈”...","link":"","photos":[],"count_time":{"symbolsCount":783,"symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":14,"path":"api/categories/技术.json"}],"tags":[{"name":"小程序","slug":"小程序","count":1,"path":"api/tags/小程序.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"vue权限","uid":"172b888c0dcd8e362469b61e697dea6a","slug":"vue权限","date":"2022-06-12T13:21:42.000Z","updated":"2022-06-12T13:40:06.195Z","comments":true,"path":"api/articles/vue权限.json","keywords":null,"cover":"static\\img\\photo-1516166328576-82e16a127024.jpg","text":"vue权限什么是权限权限是对特定资源访问,也就是确保用户只能访问到被分配的资源 前端发起的请求都会触发路由和视图 可以从路由和视图方面进行控制 路由方面:用户登录后只能看到自己有权访问的菜单导航 视图方面: 用户只能看到自己有权浏览的内容和控件 前端权限控制分为四个方面: 接口权...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"技术","slug":"技术","count":14,"path":"api/categories/技术.json"}],"tags":[{"name":"ES6","slug":"ES6","count":6,"path":"api/tags/ES6.json"},{"name":"JavaScript","slug":"JavaScript","count":8,"path":"api/tags/JavaScript.json"},{"name":"vue","slug":"vue","count":3,"path":"api/tags/vue.json"}],"author":{"name":"小提琴","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我见青山多妩媚，料青山、见我应如是。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}